{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{resource}"
        ],
        "parameters": [
          {
            "id": "31596d7b-c0a9-448f-b3cc-a3a906cb9d48",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "isGlobal": true,
            "value": "Microsoft.Devices/IotHubs",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"Microsoft.Devices/IotHubs\"]",
            "defaultValue": "value::1"
          },
          {
            "id": "bebd5be4-3d61-45ed-9f07-b9ae091e1ccb",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "d062cb40-2eed-4917-ab42-8f271db98312",
            "version": "KqlParameterItem/1.0",
            "name": "InsightsMetricsExists",
            "type": 1,
            "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 259200000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "Primary parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "# No metrics data from IoT Edge devices detected in the last 3 days\n\n## Please on-board with instructions at **[aka.ms/edgemon-docs](https://aka.ms/edgemon-docs)**\n\n<br>\nðŸ’¡*If you've just on-boarded,  it can take up to 15 minutes for data to be displayed.*"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "No data text view"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 7200000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "25",
      "name": "parameters - 1 - Copy",
      "styleSettings": {
        "margin": "4px 0px 0px -20px",
        "padding": "0px"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "43e6b34f-ad6a-46d3-bc57-495d4599013c",
            "version": "KqlParameterItem/1.0",
            "name": "ShowTips",
            "label": "Show Tips",
            "type": 10,
            "isRequired": true,
            "isGlobal": true,
            "value": "No",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"No\", \"Yes\"]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "25",
      "name": "showtips",
      "styleSettings": {
        "margin": "4px 4px 0px 4px",
        "padding": "0px"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "33f6e1c9-3d1d-42f8-a223-66af2bb3c198",
            "cellValue": "https://forms.office.com/r/72TsdCZ8mF",
            "linkTarget": "Url",
            "linkLabel": "Give feedback",
            "preText": "ðŸ™‚",
            "postText": "",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "25",
      "name": "give feedback",
      "styleSettings": {
        "margin": "2px 4px",
        "padding": "10px 0px 19px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "label": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroups",
                  "label": "Resource groups",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceTypes",
                  "label": "Resource types",
                  "type": 7,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| where type == 'microsoft.devices/iothubs'\r\n| project type, label=type\r\n",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                  "version": "KqlParameterItem/1.0",
                  "name": "IoTHub",
                  "label": "IoT Hub resources",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| where type == 'microsoft.devices/iothubs'\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                  "version": "KqlParameterItem/1.0",
                  "name": "State",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 8
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "{resourceType}"
            },
            "customWidth": "0",
            "name": "parameters"
          },
          {
            "type": 1,
            "content": {
              "json": "ðŸ’¡ * Learn how to **[create alerts](https://aka.ms/edgemon-create-alerts)***"
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "InsightsMetricsExists",
                "comparison": "isEqualTo",
                "value": "yes"
              },
              {
                "parameterName": "ShowTips",
                "comparison": "isEqualTo",
                "value": "Yes"
              }
            ],
            "name": "alerts-main-tip",
            "styleSettings": {
              "padding": "12px 0px 0px 0px"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AlertsManagementResources \r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| extend State = tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count = count(), \r\n            New = countif(State == \"New\"), \r\n            Acknowledged = countif(State == \"Acknowledged\"), \r\n            Closed = countif(State == \"Closed\") \r\n         by Severity = tostring(properties.essentials.severity)\r\n| order by Severity asc",
                          "size": 3,
                          "title": "Alert summary",
                          "noDataMessage": "No alerts found",
                          "noDataMessageStyle": 3,
                          "exportFieldName": "Severity",
                          "exportParameterName": "Severity",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Severity",
                                "formatter": 11,
                                "formatOptions": {
                                  "customColumnWidthSetting": "16.5ch"
                                }
                              },
                              {
                                "columnMatch": "Count",
                                "formatter": 22,
                                "formatOptions": {
                                  "aggregation": "Sum",
                                  "compositeBarSettings": {
                                    "labelText": "[\"New\"] New alerts",
                                    "columnSettings": [
                                      {
                                        "columnName": "New",
                                        "color": "blueDark"
                                      },
                                      {
                                        "columnName": "Acknowledged",
                                        "color": "lightBlue"
                                      },
                                      {
                                        "columnName": "Closed",
                                        "color": "gray"
                                      }
                                    ]
                                  }
                                },
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false,
                                    "maximumFractionDigits": 2
                                  }
                                }
                              },
                              {
                                "columnMatch": "New",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Acknowledged",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Closed",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "State",
                                "formatter": 5
                              }
                            ],
                            "sortBy": [
                              {
                                "itemKey": "Severity",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Severity",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "showPin": true,
                        "name": "Alert Summary"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "ðŸ’¡ _Click **Severity** above for details_"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "Severity",
                            "comparison": "isEqualTo"
                          },
                          {
                            "parameterName": "ShowTips",
                            "comparison": "isEqualTo",
                            "value": "Yes"
                          }
                        ],
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "ðŸ’¡ * Click **Device** link to see details around the time of the alert*"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "Severity",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "ShowTips",
                            "comparison": "isEqualTo",
                            "value": "Yes"
                          }
                        ],
                        "name": "alert-details-tip"
                      }
                    ],
                    "exportParameters": true
                  },
                  "customWidth": "30",
                  "conditionalVisibility": {
                    "parameterName": "IoTHub",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "alert-summary-group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity == '{Severity}'\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend alertTimeRange=pack(\"durationMs\", (todatetime(properties.essentials.startDateTime) - (todatetime(properties.essentials.startDateTime)-2h))/time(1ms), \"endTime\", todatetime(properties.essentials.startDateTime))\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| extend IoTHub = tostring(properties.essentials.targetResource)\r\n| extend IoTResource = tostring(split(IoTHub, \"/\")[-1])\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), IoTResource, Device=tostring(properties.context.context.condition.allOf[0].dimensions[0].value), IoTHub, Name=name, Observed = tostring(properties.context.context.condition.allOf[0].metricValue), Threshold = tostring(properties.context.context.condition.allOf[0].threshold), State=tostring(properties.essentials.alertState), alertTimeRange\r\n| order by StartTime desc\r\n",
                          "size": 0,
                          "title": "{$rowCount} {Severity} Alerts",
                          "noDataMessage": "No alerts found",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "AlertId",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "Resource"
                                }
                              },
                              {
                                "columnMatch": "StartTime",
                                "formatter": 6,
                                "formatOptions": {
                                  "customColumnWidthSetting": "22.4286ch"
                                }
                              },
                              {
                                "columnMatch": "IoTResource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Device",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": false,
                                  "workbookContext": {
                                    "componentIdSource": "column",
                                    "componentId": "IoTHub",
                                    "resourceIdsSource": "default",
                                    "templateIdSource": "static",
                                    "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                                    "typeSource": "default",
                                    "gallerySource": "default",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "SelectedResource",
                                        "source": "column",
                                        "value": "IoTResource"
                                      },
                                      {
                                        "name": "SelectedDevice",
                                        "source": "cell",
                                        "value": ""
                                      },
                                      {
                                        "name": "timeRange",
                                        "source": "column",
                                        "value": "alertTimeRange"
                                      },
                                      {
                                        "name": "invokedFromFleetViewWorkbook",
                                        "source": "static",
                                        "value": "yes"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "22.5714ch"
                                }
                              },
                              {
                                "columnMatch": "IoTHub",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "14.8571ch"
                                }
                              },
                              {
                                "columnMatch": "Name",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "OpenBlade",
                                  "linkIsContextBlade": true,
                                  "bladeOpenContext": {
                                    "bladeName": "AlertDetailsTemplateBlade",
                                    "extensionName": "Microsoft_Azure_Monitoring",
                                    "bladeParameters": [
                                      {
                                        "name": "alertId",
                                        "source": "column",
                                        "value": "AlertId"
                                      },
                                      {
                                        "name": "alertName",
                                        "source": "column",
                                        "value": "Name"
                                      },
                                      {
                                        "name": "invokedFrom",
                                        "source": "static",
                                        "value": "Workbooks"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "31.5714ch"
                                },
                                "tooltipFormat": {
                                  "tooltip": "View alert details"
                                }
                              },
                              {
                                "columnMatch": "Observed",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "14ch"
                                }
                              },
                              {
                                "columnMatch": "Threshold",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "14.2857ch"
                                }
                              },
                              {
                                "columnMatch": "State",
                                "formatter": 1
                              },
                              {
                                "columnMatch": "alertTimeRange",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Level",
                                "formatter": 11
                              },
                              {
                                "columnMatch": "TargetResource",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "subTarget": "alerts",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 11
                              },
                              {
                                "columnMatch": "essentials",
                                "formatter": 5,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "StartTime",
                                "sortOrder": 2
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "IoTHub",
                                "label": "IoT Hub"
                              },
                              {
                                "columnId": "Name",
                                "label": "Alert name"
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "StartTime",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "showPin": true,
                        "name": "Alerts for severity",
                        "styleSettings": {
                          "margin": "-10px 0px 0px 0px"
                        }
                      }
                    ],
                    "exportParameters": true
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "Severity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "alert-details-group",
                  "styleSettings": {
                    "margin": "0px 0px 0px 0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources \r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend State = tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| summarize Alerts = count(), \r\n            New = countif(State == \"New\"), \r\n            Acknowledged = countif(State == \"Acknowledged\"), \r\n            Closed = countif(State == \"Closed\")\r\n         by Resource = tostring(properties.essentials.targetResource)\r\n| order by Alerts desc\r\n",
                    "size": 0,
                    "title": "Alerts by Region",
                    "noDataMessage": "No alerts",
                    "noDataMessageStyle": 3,
                    "exportMultipleValues": true,
                    "exportAggregateParts": true,
                    "exportedParameters": [
                      {
                        "parameterName": "Selected",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "map",
                    "gridSettings": {
                      "rowLimit": 1000
                    },
                    "mapSettings": {
                      "locInfo": "AzureResource",
                      "locInfoColumn": "Resource",
                      "sizeSettings": "Alerts",
                      "sizeAggregation": "Sum",
                      "defaultSize": 0,
                      "legendMetric": "Alerts",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "nodeColorField": "Alerts",
                        "colorAggregation": "Sum",
                        "type": "heatmap",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "customWidth": "70",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "IoTHub",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts map",
                  "styleSettings": {
                    "margin": "0px 0px 0px 0px"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isNotEqualTo"
            },
            "name": "visible if subscriptions selected"
          }
        ],
        "exportParameters": true
      },
      "name": "alerts-group",
      "styleSettings": {
        "margin": "15px 0px"
      }
    }
  ],
  "fallbackResourceIds": [
  ],
  "$schema": "https://github.com/woodyard/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
